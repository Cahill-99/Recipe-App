{"version":3,"sources":["components/Landing.js","components/Ingredients.js","components/Filters.js","components/Results.js","components/MobileResults.js","components/MobileWrap.js","components/Display.js","components/Main.js","components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","className","to","require","config","Ingredients","props","useState","suggestions","setSuggestions","list","setList","inputValue","setInputValue","timer","setTimer","autoComplete","search","console","log","fetch","process","then","response","json","InputEl","useRef","searchFocus","current","focus","ref","type","value","onChange","e","target","clearTimeout","val","newTimer","setTimeout","length","src","alt","map","hit","onClick","selected","searchString","ingredientsList","concat","localStorage","setItem","JSON","stringify","searchStringAdd","handleClick","name","ing","ingredient","updatedList","filter","item","searchStringRemove","deleteIngredient","searchStringReset","Filters","toggleTimeDropdown","style","display","dropdown","handleTime","toggleGlutenFilter","searchState","backgroundColor","glutenFreeColor","toggleVegetarianFilter","vegetarianColor","Results","contextData","React","useContext","RecipeContext","recipeLimit","setRecipeLimit","targetContainer","useInfiniteScrollHook","slice","recipeItem","index","pathname","activeClassName","key","state","recipeImage","image","recipeTitle","title","recipeTime","readyInMinutes","ingredients","extendedIngredients","instructions","analyzedInstructions","id","MobileResults","MobileWrap","Display","recipes","createContext","Main","getItem","glutenFree","setGlutenFree","vegetarian","setVegetarian","setGlutenFreeColor","setVegetarianColor","setSearch","setRecipes","setDropdown","timeFilter","setTimeFilter","useEffect","vegActive","glutenActive","recipesList","results","Provider","newString","ingredientPiece","newSearchString","replace","searchInput","glutenStatus","vegStatus","time","Recipe","location","useLocation","shownImage","shownTitle","shownTime","shownIngredients","shownInstructions","steps","original","step","number","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.784da889.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Landing() {\r\n    return (\r\n    <div className = \"base-wrapper\">\r\n        <div className = \"white-block\">\r\n            <div className = \"text-block\">\r\n                <h2>Finding recipes made easy</h2>\r\n                <p className = \"landing-text\"> \r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna</p>\r\n                <Link to= '/main' className= \"start-link\">\r\n                <button className = \"startbtn\">Get Started</button>\r\n                </Link>\r\n            </div>\r\n            <div className = \"green-block-landing\">\r\n                <div className = \"photo-block\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React, {useState, useRef} from 'react';\r\n\r\nrequire('dotenv').config()\r\n\r\n\r\nfunction Ingredients(props) {\r\n\r\n\r\n\r\n    const [suggestions,setSuggestions] = useState([])\r\n    const [list,setList] = useState([])\r\n    const [inputValue,setInputValue] = useState('')\r\n    const [timer,setTimer]  = useState('')\r\n\r\n\r\n    const handleChange = e => {\r\n\r\n        setInputValue(e.target.value)\r\n\r\n        clearTimeout(timer)\r\n        const val = e.target.value\r\n        const newTimer = setTimeout(() => {\r\n            if(val !== \"\")\r\n            autoComplete(val)\r\n        }, 500)\r\n\r\n        setTimer(newTimer)\r\n\r\n      }\r\n\r\n\r\n      const autoComplete = (search) => {\r\n        console.log(`search ${search}`);\r\n        fetch(`https://api.spoonacular.com/food/ingredients/autocomplete?query=${search}&number=5&apiKey=${process.env.REACT_APP_SPOON_KEY}`)\r\n        .then((response) => response.json())\r\n        .then(autoComplete => {\r\n            setSuggestions(autoComplete);\r\n        })\r\n        console.log(suggestions);\r\n    };\r\n\r\n\r\n\r\n    const handleClick = (selected) => {\r\n        let searchString = props.search + \",\" + selected;\r\n        let ingredientsList = list.concat([selected]);\r\n        setSuggestions(\"\");\r\n        setList(ingredientsList);\r\n\r\n        localStorage.setItem(\"list\",JSON.stringify(ingredientsList));\r\n        // console.log(JSON.parse(ingredientsList));\r\n        setInputValue(\"\");\r\n        searchFocus();\r\n\r\n\r\n\r\n\r\n        console.log(searchString)\r\n        console.log(ingredientsList)\r\n\r\n        props.searchStringAdd(searchString)\r\n\r\n    }\r\n    \r\n    // focus on input feild on suggestion click\r\n    const InputEl = useRef();\r\n    const searchFocus = () => {\r\n\r\n\r\n        InputEl.current.focus();\r\n    }\r\n    \r\n\r\n\r\n\r\n    const deleteIngredient = (ingredient) => {\r\n\r\n        //remove clicked ingredient from list\r\n        const listCopy = [...list];\r\n        const updatedList = listCopy.filter(item => item !== ingredient);\r\n\r\n        setList(updatedList)\r\n\r\n        //remove clicked ingredient from search state\r\n\r\n        props.searchStringRemove(ingredient)\r\n\r\n    }\r\n\r\n    const resetSearch = () => { //Remove all ingredients\r\n        setList([]);\r\n        props.searchStringReset();\r\n        \r\n\r\n    }\r\n\r\n\r\n        return (\r\n\r\n            <div className = \"green-block-main\">\r\n                <div className = \"green-upper-wrapper\">\r\n                    <h4>Ingredients</h4>\r\n                    <form className = \"search-form\">\r\n                        <input className = \"search-bar\" ref={InputEl} type=\"text\" value = {inputValue} onChange= {handleChange}>\r\n                        </input>\r\n                    </form>\r\n                    <div className = \"green-info-wrapper\">\r\n                        {suggestions.length === 0 && list.length === 0 &&(\r\n                        <div className = \"green-instructions-wrapper\">\r\n                        <img className = \"green-arrow\"  src = {process.env.PUBLIC_URL +'/img/greenarrow.png'} alt = \"up arrow\"></img>\r\n                        <p className = \"green-instructions\">Add an ingredient to begin your search</p>\r\n\r\n                        </div>\r\n                        )}\r\n                        {suggestions.length !== 0 && (\r\n                        <div className = \"auto-complete-dropdown\">\r\n                            {suggestions.map(hit =>{\r\n                                return (\r\n                                    <p className = \"suggestions\" key = {hit.name} onClick = {()=> {handleClick(hit.name)}}>{hit.name}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        )}\r\n                        {list.length !== 0 &&(\r\n                            <div className=\"ing-list\">\r\n                                {list.map(ing => {\r\n                                    return (\r\n                                        <div key={ing} className=\"ing-wrapper\">\r\n                                            <li className=\"ingredient\">{ing}</li>\r\n                                            <button onClick={() => deleteIngredient(ing)} className=\"ing-x-button\">X</button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {list.length !== 0 &&(\r\n                    <button className = \"reset-button\" onClick={() => resetSearch()}>Reset</button>\r\n                )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\nexport default Ingredients;","import React from 'react';\r\n\r\nfunction Filters(props) {\r\n\r\n\r\n\r\n\r\n    \r\n\r\n        return (\r\n\r\n            <div className = \"filter-wrapper\">\r\n                <div className = \"time-wrapper\">\r\n                    <div className = \"time-button\">\r\n                        <div className = \"time-light\">\r\n                            <p className = \"filter-text\">\r\n                                Time\r\n                            </p>\r\n                        </div>\r\n                        <div className = \"time-dark\" onClick={()=> props.toggleTimeDropdown()}>\r\n                        <img className = \"filter-arrow\"  src = {process.env.PUBLIC_URL +'/img/filterarrow.png'} alt = \"drop down arrow\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"time-dropdown\"\r\n                    style={{display: props.dropdown}}>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"15\")}>\r\n                            15 min\r\n                        </button>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"30\")}>\r\n                            30 min\r\n                        </button>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"60\")}>\r\n                            1 hr\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"diet-wrapper\">\r\n                    <div className = \"diet-light\">\r\n                        <p className = \"filter-text\">\r\n                            Diet\r\n                        </p>\r\n                    </div>\r\n                    <div className = \"diet-dark\">\r\n                        <div className = \"filter-wrapper\">\r\n                            <button className = \"gluten-btn\"  \r\n                            onClick={()=> props.toggleGlutenFilter(props.searchState)} \r\n                            style={{backgroundColor: props.glutenFreeColor}}>\r\n\r\n                            </button>\r\n                            <p className = \"filter-subtext\">Gluten free</p>\r\n                        </div>\r\n                        <div className = \"filter-wrapper\">\r\n                            <button className = \"veg-btn\"\r\n                            onClick={()=> props.toggleVegetarianFilter(props.searchState)}\r\n                            style={{backgroundColor: props.vegetarianColor}}>\r\n                                \r\n                            </button>\r\n                            <p className = \"filter-subtext\">Vegetarian</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Filters;","import React, {useState, useRef } from 'react';\r\nimport { useInfiniteScrollHook } from 'use-infinite-scroll-hook/lib';\r\nimport {Link} from 'react-router-dom';\r\nimport {RecipeContext} from \"./Main\";\r\n\r\n\r\n\r\n\r\nfunction Results(props) {\r\n\r\n    let contextData = React.useContext(RecipeContext);\r\n\r\n    const [recipeLimit,setRecipeLimit] = useState(10)\r\n\r\n\r\n    const showMore = () => {\r\n                setRecipeLimit(recipeLimit + 10)\r\n                console.log(\"should be loading more\")\r\n    }\r\n\r\n\r\n    const targetContainer = useRef(null);\r\n\r\n    const loadData = () => showMore();\r\n    \r\n    useInfiniteScrollHook(targetContainer, loadData);\r\n\r\n    return (   \r\n    <div className = \"white-block-main\" ref = {targetContainer}>\r\n        {contextData && contextData.slice(0,recipeLimit).map((recipeItem, index) => {\r\n            return  (\r\n                <div className = \"linkWrapper\" key = {recipeItem.id}>\r\n                    <Link\r\n                    to= {{\r\n                    pathname:'/recipe',\r\n                    activeClassName:\"recipe-card\", \r\n                    key:{recipeItem},\r\n                    state:{recipeImage: recipeItem.image,\r\n                            recipeTitle: recipeItem.title,\r\n                            recipeTime: recipeItem.readyInMinutes,\r\n                            ingredients: recipeItem.extendedIngredients,\r\n                            instructions: recipeItem.analyzedInstructions\r\n                            }}}>\r\n                        <div className = \"recipe-card\" key = {recipeItem.id}>\r\n\r\n                            <img className = \"recipe-image\" src = {recipeItem.image} alt = {recipeItem.title}></img>\r\n                            <div className = \"recipe-card-title-bar\">\r\n                                <p key={recipeItem.id} className = \"card-text\">{recipeItem.title}</p>\r\n                            </div>\r\n                            <div className = \"recipe-card-icon-bar\">\r\n                                <div className = \"time-display\">\r\n                                <img className = \"clock-logo\" src = {process.env.PUBLIC_URL +'/img/clock.png'} alt = \"time icon\"></img>\r\n                                <p className = \"card-icon-text\">{recipeItem.readyInMinutes} min </p>\r\n                                </div>\r\n                                <div className = \"time-display\">\r\n                                <img className = \"diet-logo\" src = {process.env.PUBLIC_URL +'/img/diet.png'} alt = \"diet icon\"></img>\r\n                                <p className = \"card-icon-text\"></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                 </div>\r\n            )}\r\n            \r\n        )}\r\n\r\n\r\n\r\n        {!contextData && (\r\n\r\n            <img className = \"placeholder-plate\"  src = {process.env.PUBLIC_URL +'/img/plate.png'} alt = \"plate with fork\"></img>\r\n\r\n            )}\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React, {useState, useRef } from 'react';\r\nimport { useInfiniteScrollHook } from 'use-infinite-scroll-hook/lib';\r\nimport {Link} from 'react-router-dom';\r\nimport {RecipeContext} from \"./Main\";\r\n\r\nfunction MobileResults(props) {\r\n\r\n    let contextData = React.useContext(RecipeContext);\r\n\r\n    const [recipeLimit,setRecipeLimit] = useState(10)\r\n\r\n\r\n    const showMore = () => {\r\n                setRecipeLimit(recipeLimit + 10)\r\n                console.log(\"should be loading more\")\r\n    }\r\n\r\n\r\n    const targetContainer = useRef(null);\r\n\r\n    const loadData = () => showMore();\r\n    \r\n    useInfiniteScrollHook(targetContainer, loadData);\r\n\r\n    return (\r\n    \r\n    <div className = \"white-mobile\" ref = {targetContainer}>\r\n        {contextData && contextData.slice(0,recipeLimit).map((recipeItem, index) => {\r\n            return  (\r\n                <div className = \"linkWrapper\" key = {recipeItem.id}>\r\n                    <Link\r\n                    to= {{\r\n                    pathname:'/recipe',\r\n                    activeClassName:\"recipe-card\", \r\n                    key:{recipeItem},\r\n                    state:{recipeImage: recipeItem.image,\r\n                            recipeTitle: recipeItem.title,\r\n                            recipeTime: recipeItem.readyInMinutes,\r\n                            ingredients: recipeItem.extendedIngredients,\r\n                            instructions: recipeItem.analyzedInstructions\r\n                            }}}>\r\n                        <div className = \"recipe-card\" key = {index}>\r\n\r\n                            <img className = \"recipe-image\" src = {recipeItem.image} alt = {recipeItem.title}></img>\r\n                            <div className = \"recipe-card-title-bar\">\r\n                                <p key={index} className = \"card-text\">{recipeItem.title}</p>\r\n                            </div>\r\n                            <div className = \"recipe-card-icon-bar\">\r\n                                <div className = \"time-display\">\r\n                                <img className = \"clock-logo\" src = {process.env.PUBLIC_URL +'/img/clock.png'} alt = \"time icon\"></img>\r\n                                <p className = \"card-icon-text\">{recipeItem.readyInMinutes} min </p>\r\n                                </div>\r\n                                <div className = \"time-display\">\r\n                                <img className = \"diet-logo\" src = {process.env.PUBLIC_URL +'/img/diet.png'} alt = \"diet icon\"></img>\r\n                                <p className = \"card-icon-text\">test</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n            \r\n        )}\r\n\r\n\r\n\r\n        {!contextData && (\r\n\r\n            <img className = \"placeholder-plate\"  src = {process.env.PUBLIC_URL +'/img/plate.png'} alt = \"plate with fork\"></img>\r\n\r\n            )}\r\n\r\n\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MobileResults;","import React from 'react';\r\nimport MobileResults from './MobileResults';\r\n\r\nfunction MobileWrap() {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"mobile-wrapper\">\r\n\r\n            <MobileResults/>\r\n\r\n            <div className = \"green-mobile\">\r\n                <div className = \"mobile-green-button\">\r\n\r\n                </div>\r\n                <div className = \"mobile-filter-wrapper\">\r\n                    <div className = \"mobile-time-filter\">\r\n\r\n                    </div>\r\n                    <div className = \"mobile-diet-filter\">\r\n                        \r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileWrap;","import React from 'react';\r\nimport Filters from './Filters';\r\nimport Results from './Results';\r\nimport MobileWrap from './MobileWrap'\r\n\r\n\r\n\r\n\r\n\r\nfunction Display(props) {\r\n\r\n    \r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className = \"blue-block-main\">\r\n\r\n                <MobileWrap recipes={props.recipes}/>\r\n                \r\n                <Results recipes={props.recipes}/>\r\n\r\n                <Filters toggleGlutenFilter={props.toggleGlutenFilter} \r\n                glutenFreeColor={props.glutenFreeColor}\r\n                toggleVegetarianFilter={props.toggleVegetarianFilter}\r\n                vegetarianColor={props.vegetarianColor}\r\n                searchState={props.searchState}\r\n                toggleTimeDropdown={props.toggleTimeDropdown}\r\n                dropdown={props.dropdown}\r\n                handleTime={props.handleTime}/>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Display;","import React, {useState, useEffect } from 'react';\r\nimport Ingredients from \"./Ingredients\";\r\nimport Display from \"./Display\";\r\n\r\nrequire('dotenv').config()\r\n\r\nexport let RecipeContext = React.createContext();\r\n\r\nfunction Main() {\r\n\r\n\r\n    const [glutenFree,setGlutenFree] = useState(() => {\r\n        const saved = localStorage.getItem(\"glutenFree\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n    const [vegetarian,setVegetarian] = useState(() => {\r\n        const saved = localStorage.getItem(\"vegetarian\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n    const [glutenFreeColor,setGlutenFreeColor] = useState(() => {\r\n        const saved = localStorage.getItem(\"glutenFreeColor\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n    const [vegetarianColor,setVegetarianColor] = useState(() => {\r\n        const saved = localStorage.getItem(\"vegetarianColor\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n    const [search,setSearch] = useState(() => {\r\n        const saved = localStorage.getItem(\"searchString\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n    const [recipes,setRecipes] = useState(\"\")\r\n    const [dropdown,setDropdown] = useState(\"none\")\r\n    const [timeFilter,setTimeFilter] = useState(() => {\r\n        const saved = localStorage.getItem(\"timeFilter\");\r\n        const initialValue = saved;\r\n        return initialValue || \"\";\r\n    })\r\n\r\n\r\n    //FETCH RECIPES\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        let vegActive;\r\n        let glutenActive;\r\n\r\n\r\n\r\n        glutenFree === true ? glutenActive=\"&intolerances=gluten\" : glutenActive=\"\"; // toggles gluten filter\r\n        vegetarian === true ? vegActive=\"&diet=vegetarian\" : vegActive=\"\";\r\n        console.log(\"useEffect Fetch\")\r\n        console.log(`--time filter:${timeFilter}`)\r\n        console.log(`--veg filter:${vegetarian}`)\r\n        console.log(`--Gluten Filter:${glutenFree}`)\r\n        console.log(`--search is:${search}`)\r\n\r\n        \r\n        fetch(`https://api.spoonacular.com/recipes/complexSearch?&includeIngredients=${search}&number=40${glutenActive}${vegActive}${timeFilter}&addRecipeInformation=true&instructionsRequired=true&fillIngredients=true&apiKey=${process.env.REACT_APP_SPOON_KEY}`)\r\n        .then((response) => response.json())\r\n        .then(recipesList => {\r\n            setRecipes(recipesList.results)\r\n            console.log(recipesList)\r\n        })\r\n        \r\n        // let vegActive;\r\n        // let glutenActive;\r\n\r\n\r\n\r\n        // glutenFree === true ? glutenActive=\"&health=gluten-free\" : glutenActive=\"\"; // toggles gluten filter\r\n        // vegetarian === true ? vegActive=\"&health=vegetarian\" : vegActive=\"\";\r\n        // console.log(\"useEffect Fetch\")\r\n        // console.log(`--time filter:${timeFilter}`)\r\n        // console.log(`--veg filter:${vegetarian}`)\r\n        // console.log(`--Gluten Filter:${glutenFree}`)\r\n        // console.log(`--search is:${search}`)\r\n\r\n        \r\n        // fetch(`https://api.edamam.com/search?q=${search}&app_id=${process.env.REACT_APP_EDAMAM_ID}&app_key=${process.env.REACT_APP_EDAMAM_KEY}${glutenActive}${vegActive}${timeFilter}&from=1&to=100`)\r\n        // .then((response) => response.json())\r\n        // .then(recipesList => {\r\n        //     setRecipes(recipesList.hits)\r\n        //     console.log(recipesList)\r\n        // })\r\n\r\n    },[timeFilter,glutenFree,vegetarian,search])\r\n\r\n\r\n\r\n    const searchStringAdd = (newString) => {\r\n        setSearch(newString)\r\n        console.log(newString)\r\n        localStorage.setItem(\"searchString\",newString)\r\n    }\r\n    \r\n    const searchStringRemove = (ingredient) => {\r\n        const ingredientPiece = \",\" + ingredient;\r\n        const prevSearchString = search;\r\n        const newSearchString = prevSearchString.replace(ingredientPiece,\"\")\r\n\r\n        setSearch(newSearchString)\r\n        console.log(newSearchString);\r\n    }\r\n\r\n    const searchStringReset = () => {\r\n        setSearch(\"\")\r\n        console.log(\"list reset\")\r\n    }\r\n\r\n\r\n\r\n\r\n    //ORANGE FILTERS\r\n\r\n\r\n    //Time Filters\r\n\r\n\r\n    const toggleTimeDropdown = () => {\r\n        let dropdownStatus = \"none\";\r\n\r\n        dropdown === \"none\" ? dropdownStatus=\"flex\" : dropdownStatus=\"none\";\r\n\r\n        setDropdown(dropdownStatus);\r\n        \r\n    }\r\n    const handleTime = (time) => {\r\n        setTimeFilter(`&maxReadyTime=${time}`)\r\n        localStorage.setItem(\"timeFilter\",time)\r\n        toggleTimeDropdown();\r\n        console.log(time)\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //Diet Filters\r\n\r\n    const toggleGlutenFilter = (searchInput) => {\r\n        console.log(\"toggle\")\r\n        let glutenStatus=glutenFree;\r\n        if(glutenStatus===false) {\r\n            setGlutenFree(true)\r\n            localStorage.setItem(\"glutenFree\",true)\r\n            setGlutenFreeColor(\"white\")\r\n            localStorage.setItem(\"glutenFreeColor\",\"white\")\r\n            glutenStatus=true\r\n        } else {\r\n            setGlutenFree(false)\r\n            localStorage.setItem(\"glutenFree\",false)\r\n            setGlutenFreeColor(\"\")\r\n            localStorage.setItem(\"glutenFreeColor\",\"\")\r\n            glutenStatus=false\r\n        }\r\n        console.log(glutenStatus)\r\n\r\n\r\n    }\r\n\r\n    const toggleVegetarianFilter = (searchInput) => {\r\n        console.log(\"toggle\")\r\n        let vegStatus=vegetarian;\r\n        if(vegStatus===false) {\r\n            setVegetarian(true)\r\n            localStorage.setItem(\"vegetarian\",true)\r\n            setVegetarianColor(\"white\")\r\n            localStorage.setItem(\"vegetariancolor\",\"white\")\r\n            vegStatus=true\r\n        } else {\r\n            setVegetarian(false)\r\n            localStorage.setItem(\"vegetarian\",false)\r\n            setVegetarianColor(\"\")\r\n            localStorage.setItem(\"vegetariancolor\",\"\")\r\n            vegStatus=false\r\n        }\r\n        console.log(vegStatus);\r\n\r\n    }\r\n\r\n\r\n\r\n        return (\r\n\r\n        <RecipeContext.Provider value={recipes} >\r\n            <div className = \"base-wrapper-main\">\r\n                <Ingredients glutenFree={glutenFree}\r\n                vegetarian={vegetarian}\r\n                search={search}\r\n                searchStringAdd={searchStringAdd}\r\n                searchStringRemove={searchStringRemove}\r\n                searchStringReset={searchStringReset}\r\n                />\r\n                <Display toggleGlutenFilter={toggleGlutenFilter}\r\n                glutenFreeColor={glutenFreeColor} \r\n                toggleVegetarianFilter={toggleVegetarianFilter}\r\n                vegetarianColor={vegetarianColor}\r\n                searchState={search}\r\n                toggleTimeDropdown={toggleTimeDropdown}\r\n                dropdown={dropdown}\r\n                handleTime={handleTime}\r\n                recipes={recipes}\r\n                />\r\n            </div>\r\n        </RecipeContext.Provider>\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Main;","import React, {useEffect} from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Recipe() {\r\n\r\n    const location=useLocation()\r\n\r\n    console.log(location.state)\r\n\r\n\r\n\r\n    let shownImage =location.state.recipeImage;\r\n    let shownTitle =location.state.recipeTitle;\r\n    let shownTime =location.state.recipeTime;\r\n    let shownIngredients =location.state.ingredients\r\n    let shownInstructions =location.state.instructions[0].steps\r\n\r\nuseEffect(()=>{\r\n\r\n    console.log(shownTitle)\r\n    console.log(shownIngredients)\r\n    console.log(shownInstructions)\r\n},[shownImage,shownTitle,shownTime,shownInstructions,shownIngredients])\r\n    console.log(\"check 1\");\r\n    return (\r\n        <div className=\"section-wrapper\">\r\n            <div className=\"rp-green\">\r\n                <Link to='/main'>\r\n                    <img src = {process.env.PUBLIC_URL +'/img/backarrow.png'} className = \"back-arrow\" alt = \"back arrow\"></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"rp-blue\">\r\n                <div className=\"rp-white\">\r\n\r\n                    <div className = \"recipe-display\">\r\n                        <img className = \"recipe-image\" src = {shownImage} alt = \"recipe\"></img>\r\n                        <div className = \"recipe-card-title-bar\">\r\n                            <p className = \"card-text\">{shownTitle}</p>\r\n                        </div>\r\n                        <div className = \"recipe-card-icon-bar\">\r\n                            <div className = \"time-display\">\r\n                            <img className = \"clock-logo\" src = {process.env.PUBLIC_URL +'/img/clock.png'} alt = \"time icon\"></img>\r\n                            <p className = \"card-icon-text\">{shownTime} min </p>\r\n                            </div>\r\n                            <div className = \"time-display\">\r\n                            <img className = \"diet-logo\" src = {process.env.PUBLIC_URL +'/img/diet.png'} alt = \"diet icon\"></img>\r\n                            <p className = \"card-icon-text\">test</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                            <div className = \"recipe-details\">\r\n                                <h3 className = \"ingredients-title\">Ingredients</h3>\r\n                                \r\n                                <div className = \"ingredients-list-wrapper\">\r\n                                    {shownIngredients.map((ingredient) => {\r\n                                        return  (\r\n                                                <li key={ingredient.id} className = \"ingredients-list\">\r\n                                                    {ingredient.original}\r\n                                                </li>\r\n\r\n                                        )}\r\n                                    \r\n                                    )}\r\n                                </div>\r\n\r\n                                <h3 className = \"instructions-title\">Instructions</h3>\r\n\r\n                                <div className = \"instructions-list-wrapper\">\r\n                                    <ol>\r\n                                        {shownInstructions.map((instructions) => {\r\n                                            return (\r\n                                                <li key={instructions.number} className = \"instructions-list\">\r\n                                                    \r\n                                                    {instructions.step}\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\nimport Landing from \"./components/Landing\";\nimport {BrowserRouter as Router, Route, HashRouter} from 'react-router-dom';\nimport Main from './components/Main';\nimport Recipe from './components/Recipe';\n\nfunction App() {\n\n    return (\n      <Router basename='/Recipe-App'>\n      <div className = \"wrapper\">\n        <img className = \"logo\" src = {process.env.PUBLIC_URL +'/img/Smart-chef-logo.png'} alt = \"Smart Chef Logo\"></img>\n        <HashRouter>\n          <Route path=\"/\" exact component={Landing}/>\n          <Route path=\"/main\" exact component={Main}/>\n          <Route path=\"/recipe\" exact component={Recipe}/>\n        </HashRouter>\n      </div>\n      </Router>\n    );\n  }\n\n      \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}