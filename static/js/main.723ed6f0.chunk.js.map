{"version":3,"sources":["components/Landing.js","components/Greenblk.js","components/Orangefilters.js","components/Results.js","components/Blueblk.js","components/Main.js","components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","className","to","require","config","Greenblk","props","useState","suggestions","setSuggestions","list","setList","inputValue","setInputValue","timer","setTimer","autoComplete","search","console","log","fetch","process","then","response","json","InputEl","useRef","searchFocus","current","focus","ref","type","value","onChange","e","target","clearTimeout","val","newTimer","setTimeout","length","src","alt","map","hit","onClick","selected","searchString","ingredientsList","concat","searchStringAdd","handleClick","name","ing","ingredient","updatedList","filter","item","searchStringRemove","deleteIngredient","searchStringReset","Orangefilters","toggleTimeDropdown","style","display","dropdown","handleTime","toggleGlutenFilter","searchState","backgroundColor","glutenFreeColor","toggleVegetarianFilter","vegetarianColor","Results","recipeLimit","setRecipeLimit","targetContainer","useInfiniteScrollHook","recipes","slice","recipeItem","index","pathname","activeClassName","key","state","recipeImage","image","recipeTitle","title","recipeTime","readyInMinutes","ingredients","extendedIngredients","instructions","analyzedInstructions","Blueblk","Main","glutenFree","setGlutenFree","vegetarian","setVegetarian","setGlutenFreeColor","setVegetarianColor","setSearch","setRecipes","setDropdown","timeFilter","setTimeFilter","useEffect","vegActive","glutenActive","recipesList","results","newString","ingredientPiece","newSearchString","replace","searchInput","glutenStatus","vegStatus","time","Recipe","location","useLocation","shownImage","shownTitle","shownTime","shownIngredients","shownInstructions","steps","original","step","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.723ed6f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Landing() {\r\n    return (\r\n    <div className = \"base-wrapper\">\r\n        <div className = \"white-block\">\r\n            <div className = \"text-block\">\r\n                <h2>Finding recipes made easy</h2>\r\n                <p className = \"landing-text\"> \r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna</p>\r\n                <Link to= '/main' className= \"start-link\">\r\n                <button className = \"startbtn\">Get Started</button>\r\n                </Link>\r\n            </div>\r\n            <div className = \"green-block-landing\">\r\n                <div className = \"photo-block\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React, {useState, useRef} from 'react';\r\n\r\nrequire('dotenv').config()\r\n\r\n\r\nfunction Greenblk(props) {\r\n\r\n\r\n\r\n    const [suggestions,setSuggestions] = useState([])\r\n    const [list,setList] = useState([])\r\n    const [inputValue,setInputValue] = useState('')\r\n    const [timer,setTimer]  = useState('')\r\n\r\n\r\n    const handleChange = e => {\r\n\r\n        setInputValue(e.target.value)\r\n\r\n        clearTimeout(timer)\r\n        const val = e.target.value\r\n        const newTimer = setTimeout(() => {\r\n            if(val !== \"\")\r\n            autoComplete(val)\r\n        }, 500)\r\n\r\n        setTimer(newTimer)\r\n\r\n      }\r\n\r\n\r\n      const autoComplete = (search) => {\r\n        console.log(`search ${search}`);\r\n        fetch(`https://api.spoonacular.com/food/ingredients/autocomplete?query=${search}&number=5&apiKey=${process.env.REACT_APP_SPOON_KEY}`)\r\n        .then((response) => response.json())\r\n        .then(autoComplete => {\r\n            setSuggestions(autoComplete);\r\n        })\r\n        console.log(suggestions);\r\n    };\r\n\r\n\r\n\r\n    const handleClick = (selected) => {\r\n        let searchString = props.search + \",\" + selected;\r\n        let ingredientsList = list.concat([selected]);\r\n        setSuggestions(\"\");\r\n        setList(ingredientsList);\r\n        setInputValue(\"\");\r\n        searchFocus();\r\n\r\n\r\n\r\n\r\n        console.log(searchString)\r\n        console.log(ingredientsList)\r\n\r\n        props.searchStringAdd(searchString)\r\n\r\n    }\r\n    \r\n    // focus on input feild on suggestion click\r\n    const InputEl = useRef();\r\n    const searchFocus = () => {\r\n\r\n\r\n        InputEl.current.focus();\r\n    }\r\n    \r\n\r\n\r\n\r\n    const deleteIngredient = (ingredient) => {\r\n\r\n        //remove clicked ingredient from list\r\n        const listCopy = [...list];\r\n        const updatedList = listCopy.filter(item => item !== ingredient);\r\n\r\n        setList(updatedList)\r\n\r\n        //remove clicked ingredient from search state\r\n\r\n        props.searchStringRemove(ingredient)\r\n\r\n    }\r\n\r\n    const resetSearch = () => { //Remove all ingredients\r\n        setList([]);\r\n        props.searchStringReset();\r\n        \r\n\r\n    }\r\n\r\n\r\n        return (\r\n\r\n            <div className = \"green-block-main\">\r\n                <div className = \"green-upper-wrapper\">\r\n                    <h4>Ingredients</h4>\r\n                    <form className = \"search-form\">\r\n                        <input className = \"search-bar\" ref={InputEl} type=\"text\" value = {inputValue} onChange= {handleChange}>\r\n                        </input>\r\n                    </form>\r\n                    <div className = \"green-info-wrapper\">\r\n                        {suggestions.length === 0 && list.length === 0 &&(\r\n                        <div className = \"green-instructions-wrapper\">\r\n                        <img className = \"green-arrow\"  src = \"Images/greenarrow.png\" alt = \"up arrow\"></img>\r\n                        <p className = \"green-instructions\">Add an ingredient to begin your search</p>\r\n\r\n                        </div>\r\n                        )}\r\n                        {suggestions.length !== 0 && (\r\n                        <div className = \"auto-complete-dropdown\">\r\n                            {suggestions.map(hit =>{\r\n                                return (\r\n                                    <p className = \"suggestions\" key = {hit.name} onClick = {()=> {handleClick(hit.name)}}>{hit.name}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        )}\r\n                        {list.length !== 0 &&(\r\n                            <div className=\"ing-list\">\r\n                                {list.map(ing => {\r\n                                    return (\r\n                                        <div key={ing} className=\"ing-wrapper\">\r\n                                            <li className=\"ingredient\">{ing}</li>\r\n                                            <button onClick={() => deleteIngredient(ing)} className=\"ing-x-button\">X</button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {list.length !== 0 &&(\r\n                    <button className = \"reset-button\" onClick={() => resetSearch()}>Reset</button>\r\n                )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\nexport default Greenblk;","import React from 'react';\r\n\r\nfunction Orangefilters(props) {\r\n\r\n\r\n\r\n\r\n    \r\n\r\n        return (\r\n\r\n            <div className = \"filter-wrapper\">\r\n                <div className = \"time-wrapper\">\r\n                    <div className = \"time-button\">\r\n                        <div className = \"time-light\">\r\n                            <p className = \"filter-text\">\r\n                                Time\r\n                            </p>\r\n                        </div>\r\n                        <div className = \"time-dark\" onClick={()=> props.toggleTimeDropdown()}>\r\n                        <img className = \"filter-arrow\"  src = \"Images/filterarrow.png\" alt = \"drop down arrow\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"time-dropdown\"\r\n                    style={{display: props.dropdown}}>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"15\")}>\r\n                            15 min\r\n                        </button>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"30\")}>\r\n                            30 min\r\n                        </button>\r\n                        <button className = \"time-option\"\r\n                        onClick={()=> props.handleTime(\"60\")}>\r\n                            1 hr\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"diet-wrapper\">\r\n                    <div className = \"diet-light\">\r\n                        <p className = \"filter-text\">\r\n                            Diet\r\n                        </p>\r\n                    </div>\r\n                    <div className = \"diet-dark\">\r\n                        <div className = \"filter-wrapper\">\r\n                            <button className = \"gluten-btn\"  \r\n                            onClick={()=> props.toggleGlutenFilter(props.searchState)} \r\n                            style={{backgroundColor: props.glutenFreeColor}}>\r\n\r\n                            </button>\r\n                            <p className = \"filter-subtext\">Gluten free</p>\r\n                        </div>\r\n                        <div className = \"filter-wrapper\">\r\n                            <button className = \"veg-btn\"\r\n                            onClick={()=> props.toggleVegetarianFilter(props.searchState)}\r\n                            style={{backgroundColor: props.vegetarianColor}}>\r\n                                \r\n                            </button>\r\n                            <p className = \"filter-subtext\">Vegetarian</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Orangefilters;","import React, {useState, useRef} from 'react';\r\nimport { useInfiniteScrollHook } from 'use-infinite-scroll-hook/lib';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Results(props) {\r\n\r\n    const [recipeLimit,setRecipeLimit] = useState(10)\r\n\r\n\r\n    const showMore = () => {\r\n                setRecipeLimit(recipeLimit + 10)\r\n                console.log(\"should be loading more\")\r\n    }\r\n\r\n\r\n    const targetContainer = useRef(null);\r\n\r\n    const loadData = () => showMore();\r\n    \r\n    useInfiniteScrollHook(targetContainer, loadData);\r\n\r\n    return (\r\n        \r\n        \r\n    <div className = \"white-block-main\" ref = {targetContainer}>\r\n\r\n\r\n\r\n\r\n        {props.recipes && props.recipes.slice(0,recipeLimit).map((recipeItem, index) => {\r\n            return  (\r\n                <Link\r\n                 to= {{\r\n                 pathname:'/recipe',\r\n                 activeClassName:\"recipe-card\", \r\n                 key:{index},\r\n                 state:{recipeImage: recipeItem.image,\r\n                        recipeTitle: recipeItem.title,\r\n                        recipeTime: recipeItem.readyInMinutes,\r\n                        ingredients: recipeItem.extendedIngredients,\r\n                        instructions: recipeItem.analyzedInstructions\r\n                        }}}>\r\n                    <div className = \"recipe-card\" key = {index}>\r\n\r\n                        <img className = \"recipe-image\" src = {recipeItem.image} alt = {recipeItem.title}></img>\r\n                        <div className = \"recipe-card-title-bar\">\r\n                            <p key={index} className = \"card-text\">{recipeItem.title}</p>\r\n                        </div>\r\n                        <div className = \"recipe-card-icon-bar\">\r\n                            <div className = \"time-display\">\r\n                            <img className = \"clock-logo\" src = \"Images/clock.png\" alt = \"time icon\"></img>\r\n                            <p className = \"card-icon-text\">{recipeItem.readyInMinutes} min </p>\r\n                            </div>\r\n                            <div className = \"time-display\">\r\n                            <img className = \"diet-logo\" src = \"Images/diet.png\" alt = \"time icon\"></img>\r\n                            <p className = \"card-icon-text\">test</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                 </Link>\r\n\r\n            )}\r\n            \r\n        )}\r\n\r\n\r\n\r\n        {props.recipes.length === 0 && (\r\n\r\n            <img className = \"placeholder-plate\"  src = \"Images/plate.png\" alt = \"plate with fork\"></img>\r\n\r\n            )}\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport Orangefilters from './Orangefilters';\r\nimport Results from './Results';\r\n\r\n\r\n\r\n\r\n\r\nfunction Blueblk(props) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className = \"blue-block-main\">\r\n                <Results recipes={props.recipes}/>\r\n\r\n                <Orangefilters toggleGlutenFilter={props.toggleGlutenFilter} \r\n                glutenFreeColor={props.glutenFreeColor}\r\n                toggleVegetarianFilter={props.toggleVegetarianFilter}\r\n                vegetarianColor={props.vegetarianColor}\r\n                searchState={props.searchState}\r\n                toggleTimeDropdown={props.toggleTimeDropdown}\r\n                dropdown={props.dropdown}\r\n                handleTime={props.handleTime}/>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Blueblk;","import React, {useState, useEffect} from 'react';\r\nimport Greenblk from \"./Greenblk\";\r\nimport Blueblk from \"./Blueblk\";\r\n\r\nrequire('dotenv').config()\r\n\r\nfunction Main() {\r\n\r\n\r\n    const [glutenFree,setGlutenFree] = useState(false)\r\n    const [vegetarian,setVegetarian] = useState(false)\r\n    const [glutenFreeColor,setGlutenFreeColor] = useState(\"\")\r\n    const [vegetarianColor,setVegetarianColor] = useState(\"\")\r\n    const [search,setSearch] = useState(\"\")\r\n    const [recipes,setRecipes] = useState(\"\")\r\n    const [dropdown,setDropdown] = useState(\"none\")\r\n    const [timeFilter,setTimeFilter] = useState(\"\")\r\n\r\n\r\n    //FETCH RECIPES\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        let vegActive;\r\n        let glutenActive;\r\n\r\n\r\n\r\n        glutenFree === true ? glutenActive=\"&intolerances=gluten\" : glutenActive=\"\"; // toggles gluten filter\r\n        vegetarian === true ? vegActive=\"&diet=vegetarian\" : vegActive=\"\";\r\n        console.log(\"useEffect Fetch\")\r\n        console.log(`--time filter:${timeFilter}`)\r\n        console.log(`--veg filter:${vegetarian}`)\r\n        console.log(`--Gluten Filter:${glutenFree}`)\r\n        console.log(`--search is:${search}`)\r\n\r\n        \r\n        fetch(`https://api.spoonacular.com/recipes/complexSearch?&includeIngredients=${search}&number=40${glutenActive}${vegActive}${timeFilter}&addRecipeInformation=true&instructionsRequired=true&fillIngredients=true&apiKey=${process.env.REACT_APP_SPOON_KEY}`)\r\n        .then((response) => response.json())\r\n        .then(recipesList => {\r\n            setRecipes(recipesList.results)\r\n            console.log(recipesList)\r\n        })\r\n        \r\n        // let vegActive;\r\n        // let glutenActive;\r\n\r\n\r\n\r\n        // glutenFree === true ? glutenActive=\"&health=gluten-free\" : glutenActive=\"\"; // toggles gluten filter\r\n        // vegetarian === true ? vegActive=\"&health=vegetarian\" : vegActive=\"\";\r\n        // console.log(\"useEffect Fetch\")\r\n        // console.log(`--time filter:${timeFilter}`)\r\n        // console.log(`--veg filter:${vegetarian}`)\r\n        // console.log(`--Gluten Filter:${glutenFree}`)\r\n        // console.log(`--search is:${search}`)\r\n\r\n        \r\n        // fetch(`https://api.edamam.com/search?q=${search}&app_id=${process.env.REACT_APP_EDAMAM_ID}&app_key=${process.env.REACT_APP_EDAMAM_KEY}${glutenActive}${vegActive}${timeFilter}&from=1&to=100`)\r\n        // .then((response) => response.json())\r\n        // .then(recipesList => {\r\n        //     setRecipes(recipesList.hits)\r\n        //     console.log(recipesList)\r\n        // })\r\n\r\n    },[timeFilter,glutenFree,vegetarian,search])\r\n\r\n\r\n\r\n    const searchStringAdd = (newString) => {\r\n        setSearch(newString)\r\n        console.log(newString)\r\n    }\r\n    \r\n    const searchStringRemove = (ingredient) => {\r\n        const ingredientPiece = \",\" + ingredient;\r\n        const prevSearchString = search;\r\n        const newSearchString = prevSearchString.replace(ingredientPiece,\"\")\r\n\r\n        setSearch(newSearchString)\r\n        console.log(newSearchString);\r\n    }\r\n\r\n    const searchStringReset = () => {\r\n        setSearch(\"\")\r\n        console.log(\"list reset\")\r\n    }\r\n\r\n\r\n\r\n\r\n    //ORANGE FILTERS\r\n\r\n\r\n    //Time Filters\r\n\r\n\r\n    const toggleTimeDropdown = () => {\r\n        let dropdownStatus = \"none\";\r\n\r\n        dropdown === \"none\" ? dropdownStatus=\"flex\" : dropdownStatus=\"none\";\r\n\r\n        setDropdown(dropdownStatus);\r\n        \r\n    }\r\n    const handleTime = (time) => {\r\n        setTimeFilter(`&maxReadyTime=${time}`)\r\n        console.log(time)\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    //Diet Filters\r\n\r\n    const toggleGlutenFilter = (searchInput) => {\r\n        console.log(\"toggle\")\r\n        let glutenStatus=glutenFree;\r\n        if(glutenStatus===false) {\r\n            setGlutenFree(true)\r\n            setGlutenFreeColor(\"white\")\r\n            glutenStatus=true\r\n        } else {\r\n            setGlutenFree(false)\r\n            setGlutenFreeColor(\"\")\r\n            glutenStatus=false\r\n        }\r\n        console.log(glutenStatus)\r\n\r\n\r\n    }\r\n\r\n    const toggleVegetarianFilter = (searchInput) => {\r\n        console.log(\"toggle\")\r\n        let vegStatus=vegetarian;\r\n        if(vegStatus===false) {\r\n            setVegetarian(true)\r\n            setVegetarianColor(\"white\")\r\n            vegStatus=true\r\n        } else {\r\n            setVegetarian(false)\r\n            setVegetarianColor(\"\")\r\n            vegStatus=false\r\n        }\r\n        console.log(vegStatus);\r\n\r\n    }\r\n\r\n\r\n\r\n        return (\r\n\r\n        <div className = \"base-wrapper-main\">\r\n            <Greenblk glutenFree={glutenFree}\r\n            vegetarian={vegetarian}\r\n            search={search}\r\n            searchStringAdd={searchStringAdd}\r\n            searchStringRemove={searchStringRemove}\r\n            searchStringReset={searchStringReset}\r\n            />\r\n            <Blueblk toggleGlutenFilter={toggleGlutenFilter}\r\n            glutenFreeColor={glutenFreeColor} \r\n            toggleVegetarianFilter={toggleVegetarianFilter}\r\n            vegetarianColor={vegetarianColor}\r\n            searchState={search}\r\n            toggleTimeDropdown={toggleTimeDropdown}\r\n            dropdown={dropdown}\r\n            handleTime={handleTime}\r\n            recipes={recipes}\r\n            />\r\n        </div>\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Main;","import React, {useEffect} from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Recipe() {\r\n\r\n    const location=useLocation()\r\n\r\n    console.log(location.state)\r\n\r\n\r\n\r\n    let shownImage =location.state.recipeImage;\r\n    let shownTitle =location.state.recipeTitle;\r\n    let shownTime =location.state.recipeTime;\r\n    let shownIngredients =location.state.ingredients\r\n    let shownInstructions =location.state.instructions[0].steps\r\n\r\nuseEffect(()=>{\r\n\r\n    console.log(shownTitle)\r\n    console.log(shownIngredients)\r\n    console.log(shownInstructions)\r\n},[shownImage,shownTitle,shownTime,shownInstructions,shownIngredients])\r\n\r\n    return (\r\n        <div className=\"section-wrapper\">\r\n            <div className=\"rp-green\">\r\n\r\n            </div>\r\n            <div className=\"rp-blue\">\r\n                <div className=\"rp-white\">\r\n\r\n                    <div className = \"recipe-display\">\r\n                        <img className = \"recipe-image\" src = {shownImage} alt = {shownTitle}></img>\r\n                        <div className = \"recipe-card-title-bar\">\r\n                            <p className = \"card-text\">{shownTitle}</p>\r\n                        </div>\r\n                        <div className = \"recipe-card-icon-bar\">\r\n                            <div className = \"time-display\">\r\n                            <img className = \"clock-logo\" src = \"Images/clock.png\" alt = \"time icon\"></img>\r\n                            <p className = \"card-icon-text\">{shownTime} min </p>\r\n                            </div>\r\n                            <div className = \"time-display\">\r\n                            <img className = \"diet-logo\" src = \"Images/diet.png\" alt = \"time icon\"></img>\r\n                            <p className = \"card-icon-text\">test</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className = \"recipe-details\">\r\n\r\n                            \r\n                            <div className = \"ingredients-list-wrapper\">\r\n                                {shownIngredients.map((ingredient) => {\r\n                                    return  (\r\n                                            <li key={ingredient} className = \"ingredients-list\">\r\n                                                {ingredient.original}\r\n                                            </li>\r\n\r\n                                    )}\r\n                                \r\n                                )}\r\n                            </div>\r\n                            <div className = \"instructions-list-wrapper\">\r\n                                <ol>\r\n                                    {shownInstructions.map((instructions) => {\r\n                                        return (\r\n                                            <li className = \"instructions-list\">\r\n                                                \r\n                                                {instructions.step}\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\nimport Landing from \"./components/Landing\";\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Main from './components/Main';\nimport Recipe from './components/Recipe';\n\nfunction App() {\n\n    return (\n      <Router basename='/'>\n      <div className = \"wrapper\">\n        <img className = \"logo\" src = \"Images/Smart-chef-logo.png\" alt = \"Smart Chef Logo\"></img>\n        <Switch>\n          <Route path=\"/\" exact component={Landing}/>\n          <Route path=\"/main\" exact component={Main}/>\n          <Route path=\"/recipe\" exact component={Recipe}/>\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n\n      \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}